schema {
  query: RootQuery
  mutation: RootMutation
}

type AuthenticateUserError {
  nonFieldErrors: [String!]!
}

input AuthenticateUserInput {
  username: String!
  password: String!
}

union AuthenticateUserPayload = AuthenticateUserError | AuthenticateUserSuccess

type AuthenticateUserSuccess {
  user: User!
  token: String!
}

type Campaign {
  roomCode: String!
  title: String!
  createdBy: User!
}

type CreateCampaignError {
  nonFieldErrors: [String!]!
  fieldErrors: [CreateCampaignInvalidField!]!
}

enum CreateCampaignFieldName {
  TITLE
}

input CreateCampaignInput {
  title: String!
}

type CreateCampaignInvalidField {
  fieldName: CreateCampaignFieldName!
  errors: [String!]!
}

union CreateCampaignPayload = CreateCampaignError | CreateCampaignSuccess

type CreateCampaignSuccess {
  campaign: Campaign!
}

type CreateUserError {
  nonFieldErrors: [String!]!
  fieldErrors: [CreateUserInvalidField!]!
}

enum CreateUserFieldName {
  EMAIL
  PASSWORD
  USERNAME
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

type CreateUserInvalidField {
  fieldName: CreateUserFieldName!
  errors: [String!]!
}

union CreateUserPayload = CreateUserError | CreateUserSuccess

type CreateUserSuccess {
  user: User!
}

type IsAuthenticatedError {
  errors: [String!]!
}

input IsAuthenticatedInput {
  token: String!
  id: Int!
}

union IsAuthenticatedPayload = IsAuthenticatedError | IsAuthenticatedSuccess

type IsAuthenticatedSuccess {
  string: String!
}

input PageInput {
  page: String!
  params: String
}

type RootMutation {
  createUser(input: CreateUserInput!): CreateUserPayload!
  authenticateUser(input: AuthenticateUserInput!): AuthenticateUserPayload!
  isAuthenticated(input: IsAuthenticatedInput!): IsAuthenticatedPayload!
  createCampaign(input: CreateCampaignInput!): CreateCampaignPayload!
}

type RootQuery {
  userByReference(reference: String!): User
  isAllowedOnPage(input: PageInput!): Boolean!
  campaignByReference(reference: String!): Campaign!
}

type User {
  localId: ID!
  email: String!
  username: String!
  isActive: Boolean!
  isStaff: Boolean!
  reference: String!
}
